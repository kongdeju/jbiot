#!/usr/bin/env python

import sys
import os
dirpath = os.path.join(os.path.dirname(os.path.abspath(__file__)),"../")
sys.path.insert(0,dirpath)
jbio = os.path.join(os.path.dirname(os.path.abspath(__file__)),"jbio.send")
jmail = os.path.join(os.path.dirname(os.path.abspath(__file__)),"jmail")
from jbiot import csub
import time
import glob
startime = time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))

def readlogs():
    content = "Job Finished.\n\n"
    content = content + "working dir : %s\n" % os.getcwd()
    content = content + "start time: %s\n" % (startime)
    endtime = time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))
    content = content + "finished time: %s\n\n" % (endtime)

    content = content + "Details:\n\n"
    if not os.path.exists("logs"):
        return "ERROR!!! no logs found. Job probably failed\n"

    logs = glob.glob("logs/*.log")
    logs = sorted(logs)

    errors = []

    for log in logs:
        err = {}
        fp = open(log)
        head = fp.readline()
        head = fp.readline()
        head = head.strip()
        err[head] = []
        for line in fp.readlines():
            if line.find("Error") != -1 or line.find("error") != -1 or line.find("ERROR") != -1 :
                err[head].append(line)

        errors.append(err)

    for err in errors:
        for cmd,lines in err.items():
            line =  "%s\n" % cmd
            content = content + line
            if not lines:
                content = content +  "\t seems success\n"
            for line in lines:
                line = "\t%s\n" % line
                content = content + line
    content = content + "\n"
    return content


if __name__ == "__main__":
    from docopt import docopt

    usage = """
    Usage:
        csub.py <cmdfile> [--with-docker|--with-singularity] [-e <email>]

    Options:
        -h --help           print this screen
        --with-docker       prefer to user docker when exec cmd
        --with-singularity  prefer to user singularity when exec cmd
        -e,--email=<email>  email which to remind of
    """
    args = docopt(usage)
    cmdfile = args["<cmdfile>"]
    docker = args["--with-docker"]
    sing = args["--with-singularity"]
    email = args["--email"]
    csub.csub(cmdfile,docker=docker,sing=sing)


    content = readlogs()
    msg = content[:500]
    cmd = "%s '%s'" % (jbio,msg)
    #try:
    #    os.system(cmd)
    #except:
    #    pass
    if email:
        subject = "lsub run finished report"
        cmd = "%s -t %s -s '%s' -c '%s'" % (jmail,email,subject,content)
        try:
            os.system(cmd)
        except:
            pass



